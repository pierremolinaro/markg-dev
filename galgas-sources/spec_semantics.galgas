#---------------------------------------------------------------------------*
#                                                                           *
#   S E M A N T I C S                                                       *
#                                                                           *
#---------------------------------------------------------------------------*



#--- Places map
map @typeVarMap {
  public var @uint mIndex
  insert insertKey error message "the '%K' place is already declared"
  search searchKey error message "the '%K' place is not declared"
}

#--- Constants map
map @typeCstMap {
  public var @bool mSign
  public var @luint mValue
  insert insertKey error message "the '%K' constant is already declared"
  search searchKey error message "there '%K' constant is not defined"
}

#--- Precondition description
abstract refclass @typePreconditionExpression %generatedInSeparateFile {
}

refclass @typeTrueExpression : @typePreconditionExpression {
}

refclass @typeFalseExpression : @typePreconditionExpression {
}

refclass @typeComplementExpression : @typePreconditionExpression {
  public var @typePreconditionExpression mExpression
}

refclass @typeAndExpression : @typePreconditionExpression {
  public var @typePreconditionExpression mLeftExpression
  public var @typePreconditionExpression mRightExpression
}

refclass @typeOrExpression : @typePreconditionExpression {
  public var @typePreconditionExpression mLeftExpression
  public var @typePreconditionExpression mRightExpression
}

refclass @typeEqualExpression : @typePreconditionExpression {
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeNonEqualExpression : @typePreconditionExpression {
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeInfOrEqualExpression : @typePreconditionExpression {
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeSupOrEqualExpression : @typePreconditionExpression {
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeStrictInfExpression : @typePreconditionExpression {
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeStrictSupExpression : @typePreconditionExpression {
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

#--- Post condition
abstract refclass @typePostcondition %generatedInSeparateFile {
}

refclass @typePostIncrement : @typePostcondition {
  public var @lstring mVarName
  public var @uint mVar
}

refclass @typePostDecrement : @typePostcondition {
  public var @lstring mVarName
  public var @uint mVar
}

refclass @typeAddConstant : @typePostcondition {
  public var @lstring mVarName
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeSubConstant : @typePostcondition {
  public var @lstring mVarName
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeAssignConstant : @typePostcondition {
  public var @lstring mVarName
  public var @uint mVar
  public var @bool mNegativeConstant
  public var @luint mConstant
}

refclass @typeAssignInfinity : @typePostcondition {
  public var @lstring mVarName
  public var @uint mVar
}

#--- Post condition list
list @typePostconditionList {
  public var @typePostcondition mPostcondition
}

#--- Transition list
list @typeTransitionList {
  public var @lstring mTransitionName
  public var @typePreconditionExpression mPreconditionExpression
  public var @typePostconditionList mPostconditionList
  public var @uint mLowTemporalBound
  public var @uint mHighTemporalBound
}

#--- Initial marking description
list @typeInitialMarkingList {
  public var @typePostcondition mInitValue
}

#--- count list
list @countList {
  public var @lstring mName
  public var @typePreconditionExpression mCondition
}

#---------------------------------------------------------------------------*

extern proc generate_code
  ?let @uint hashMapSize
  ?let @uint garbagePeriod
  ?let @typeVarMap placesMap
  ?let @typeTransitionList transitionList
  ?let @typeInitialMarkingList initialMarkingList
  ?let @countList countList

#---------------------------------------------------------------------------*

